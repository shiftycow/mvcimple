=head1 Name

MVCimple - A simple model-view-controller framework generator for Perl

=head2 Copying

MVCimple is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

MVCimple is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with MVCimple.  If not, see <http://www.gnu.org/licenses/>. 

=head2 Synopsis

=head2 Features

=head2 Description

MVCimple is a lightweight web application framework for Perl. It is currently
focused on automating the data manipulations of applications, providing
easy interfaces to create data objects, turn them into forms, validate 
user input, and return error messages to the user. 

MVCimple is designed as a complement to other frameworks like Mojolicious,
which can provide additional features not present in MVCimple. You can write a
complete application using MVCimple's built-in template engine, use 
MVCimple objects in a L<Mojolicious::Lite> application to take advantage of fancy
routing, or anything in between. It's Perl - there's more than one way to do it!

MVCimple is still under I<heavy> development, so please leave comments and issues
if you find them.

=head2 Dependencies

MVCimple is designed to make I<strict> applications with a very short list
of dependencies. The following core dependencies should be included 
in the standard Perl distribution:

=over 4

=item * L<XML::Simple>

=item * L<CGI>

=item * L<DBI>

=back

To use some fancier features (like automated unit tests), you'll also need:

=over 4

=item * L<Time::HiRes>

=item * L<Data::Dumper>

=item * L<XML::Dumper>

=item * L<Term::ANSIColor>

=back

In addition to Perl dependencies, generated forms rely heavily on
L<Jquery> and L<JqueryUI> for a dynamic user experience.

=head2 Installation

=head2 Building an Application

=head3 Structure

MVCimple applications should have something like the following directory structure

+MyApp
|
|--lib
|  +
|  |-- MVCimple
|
|--web
|
|--conf
|  +
|  |-- app_config.conf

When using Apache or the DocumentRoot

=head3 App

=head3 Model

At the core of any application are the data I<models> that define what data
are stored and how they are related to one-another. MVCimple uses XML files
to define data models and then automatically generates I<views> and 
C<Controllers> for them.
